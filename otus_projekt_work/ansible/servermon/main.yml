---
#- name: Main configuration of Monitoring Server
#  hosts: servermon
#  become: 'yes'

#  tasks:

- name: Install Prometheus and JDK
  apt:
    name:
      - prometheus
      - prometheus-alertmanager
      - default-jdk
    state: present
    update_cache: yes

- name: Copy files for Grafana install package and Dashboard
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "files/grafana_11.4.0_amd64.deb", dest: "/tmp/grafana_11.4.0_amd64.deb" }
    - { src: "files/1860_rev37.json", dest: "/tmp/1860_rev37.json" }

- name: Install Grafana
  apt:
    deb: /tmp/grafana_11.4.0_amd64.deb
    state: present

- name: Configuration of Grafana
  copy:
    src: files/grafana.db
    dest: /var/lib/grafana/grafana.db
    owner: grafana
    group: grafana
    mode: 0640

- name: Start & Enable Grafana
  systemd:
    name: grafana-server
    enabled: yes
    state: started

- name: Copy files for config  Prometheus and Alertmanager
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "templates/prometheus.yml.j2", dest: "/etc/prometheus/prometheus.yml" }
    - { src: "templates/alertmanager.yml.j2", dest: "/etc/prometheus/alertmanager.yml" }

- name: Copy file with alert rules
  copy:
    src: "files/alert.rules.yml"
    dest: "/etc/prometheus/alert.rules.yml"

- name: Restart Alertmanager
  systemd:
    name: prometheus-alertmanager
    state: restarted

- name: Restart Prometheus
  systemd:
    name: prometheus
    state: restarted

- name: Copy install packages for LogStash, ElasticSearch, Kibana
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "files/logstash-8.16.2-amd64.deb", dest: "/tmp/logstash-8.16.2-amd64.deb" }
    - { src: "files/elasticsearch-8.16.2-amd64.deb", dest: "/tmp/elasticsearch-8.16.2-amd64.deb" }
    - { src: "files/kibana-8.16.2-amd64.deb", dest: "/tmp/kibana-8.16.2-amd64.deb" }

- name: Install ElasticSearch
  apt:
    deb: /tmp/elasticsearch-8.16.2-amd64.deb
    state: present

- name: Config ElasticSearch
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: elasticsearch
    mode: 0644
  with_items:
    - { src: "files/elasticsearch.yml", dest: "/etc/elasticsearch/elasticsearch.yml" }
    - { src: "files/jvm.options", dest: "/etc/elasticsearch/jvm.options" }

- name: Start ElasticSearch
  systemd:
    name: elasticsearch
    enabled: yes
    state: started

- name: Install LogStash
  apt:
    deb: /tmp/logstash-8.16.2-amd64.deb
    state: present

- name: Config LogStash
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "files/logstash.yml", dest: "/etc/logstash/logstash.yml" }
    - { src: "files/logstash-nginx-es.conf", dest: "/etc/logstash/conf.d/logstash-nginx-es.conf" }

- name: Start LogStash
  systemd:
    name: logstash
    enabled: yes
    state: started

- name: Install Kibana
  apt:
    deb: /tmp/kibana-8.16.2-amd64.deb
    state: present

- name: Config Kibana
  copy:
    src: files/kibana.yml
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: 0644

- name: Start Kibana
  systemd:
    name: kibana
    enabled: yes
    state: started

- name: Copy Kibana object to target host
  copy:
    src: files/export.ndjson
    dest: /tmp/export.ndjson

- name: Check Kibana service status
  uri:
    url: "http://192.168.56.200:5601/api/status"
    method: GET
    headers:
      kbn-xsrf: "true"
    status_code: 200
    return_content: no
  register: kibana_status
  until: kibana_status.status == 200
  retries: 30
  delay: 10

- name: Import Kibana object
  uri:
    url: "http://192.168.56.200:5601/api/saved_objects/_import"
    method: POST
    headers:
      kbn-xsrf: "true"
    body_format: form-multipart
    body:
      file:
        src: /tmp/export.ndjson
        filename: /tmp/export.ndjson
    status_code: 200, 201
    remote_src: yes
  #delegate_to: localhost
  when: kibana_status.status == 200


- include_tasks: servermon/preinstall.yml
- include_tasks: servermon/firewall.yml

...
